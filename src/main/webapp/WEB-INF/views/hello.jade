doctype html
html(ng-app="eventApp")
    head(charset="UTF-8")
        title "dev tools"
        meta(charset="UTF-8")
        meta(http-equiv="X-UA-Compatible" content="IE=edge")
        meta(name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no")
        link(rel='stylesheet',  href='/assets/metroUI/css/metro.min.css')
        link(rel='stylesheet',  href='/assets/metroUI/css/metro-responsive.min.css')
        link(rel='stylesheet',  href='/assets/metroUI/css/metro-schemes.min.css')
        link(rel='stylesheet',  href='/assets/metroUI/css/metro-icons.min.css')
        link(rel='stylesheet',  href='//prismjs.com/themes/prism.css')
        style.
            @font-face {
                font-family: yuehei;
                src: url("/assets/fonts/yh.woff") format("woff");
            }

            html, body {
                height: 100%;
            }
            html, body,h1, .button{
                font-family:  Verdana, yuehei, Aril, sans-serif;
            }
            .page-content {
                padding-top: 3.125rem;
                min-height: 100%;
                height: 100%;
            }
            @media screen and (max-width: 800px) {
                #cell-sidebar {
                    flex-basis: 52px;
                }

                #cell-content {
                    flex-basis: calc(100% - 52px);
                }
            }
    body.bg-steel
        .app-bar.fixed-top.darcula(data-role="appbar")
            a.app-bar-element.branding 超级后台
            span.app-bar-divider
            ul.app-bar-menu
                li: a(href="#"): del 监控台
                li
                    a.dropdown-toggle 下拉菜单
                    ul.d-menu(data-role="dropdown")
                        li: a(hef="") 菜单1
                        li.divider
                        li
                            a.dropdown-toggle(href="") 再次下拉
                            ul.d-menu(data-role="dropdown")
                                li: a(hef="") 菜单2
                                li.divider
                                li: a(hef="") 菜单3
                 li: a(href="#"): del 系统
        .page-content
            .flex-grid.no-responsive-future
                .row
                    .cell.size-x150(id="cell-sidebar")
                        ul.sidebar
                            li: a(href="#")
                                    span.mif-apps.icon
                                    span.title 测试
                                    span.counter 0
                            li: a(href="#")
                                    span.mif-database.icon
                                    span.title 代码生成
                                    span.counter 0
                    //正式页面内容
                    .cell.auto-size.padding20.bg-white(id="cell-content" ng-controller="eventCtrl as vm")
                        h1.text-light(name="title") 中文,欢迎使用,中文
                        .row.flex-just-end.headerCtrl.padding10
                            .button.mif-drive-eta(ng-click="vm.refresh()" ) 刷新全部
                            .button.mif-drive-eta(ng-click="vm.createNew()" ) 新建
                        .row.flex-just-end.headerCtrl
                            ul: li(ng-repeat="it in vm.evtList")
                                .span {{it.id}}  {{it.description}} {{it.date}}
                                    .button(ng-click="vm.detail(it.id)") 刷新
                                    .button(ng-click="vm.delete(it.id)") 删除
                        .row.content
                            .cell.colspan12.textarea.input-control(data-role="input" data-text-auto-resize="true")
                                textarea(ng-model="vm.sql" ng-keypress="vm.sqlQuery($event)")
                        .tabcontrol2(data-role="tabcontrol")
                            ul.tabs
                                li: a(href="#structure") 结构
                                li: a(href="#code") 代码
                            .frames
                                #structure.frame
                                    table.table.striped.hovered.cell-hovered.border.bordered
                                        tr(ng-repeat="row in vm.rs track by $index")
                                            td(ng-repeat="(key,value) in row track by key") {{value}}
                                #code.frame
                                    .tabcontrol2.tabs-bottom(data-role="tabcontrol")
                                        ul.tabs
                                            li: a(href="#dto") DTO
                                            li: a(href="#api") PATH
                                            li: a(href="#service") Service
                                        .frames.language-javascript
                                            #dto.frame
                                                pre
                                                    p public class xxxDto{}{
                                                    p(ng-repeat="row in vm.rs track by $index")  {{row[2]}} {{row[0]|camel}};
                                                    p }
                                            #api.frame
                                                pre.
                                                    @GET
                                                    @Path("/page")
                                                    @Produces(MediaType.APPLICATION_JSON)
                                                    Page<?> pageBy(@BeanParam Page page);
                                            #service.frame
                                                pre.
                                                    class xxxService extend GenericService{
                                                        public Page<xxxDto> pageBy(Page<xxxDto> page){
                                                            String sql = "{{vm.sql}}";
                                                            return getPageBySQL(sql,xxxDto.class,page.getPageSize(),page.getNowPage());
                                                        }
                                                    }




    script(src='//cdn.bootcss.com/jquery/2.2.1/jquery.js')
    script(src='//cdn.bootcss.com/angular.js/1.5.0/angular.js')
    script(src='/assets/metroUI/js/metro.min.js')
    script(src='//prismjs.com/prism.js')
    script(src='rest-js')
    script.
        angular.module('eventApp',[])
            .filter('camel',function(){
                return function (field) {
                    return field.toLowerCase().replace(/_(\w)/g, function($1) {
                        return $1.toUpperCase()}
                    ).replace(/_/g, '');
                }
            })
            .controller('eventCtrl',function($http){
                var self = this;
                self.sql="SELECT * FROM `information_schema`.`TABLES` t WHERE t.`TABLE_NAME` LIKE 'tm%'";
                self.detail=function(id){
                    console.log(IEvent.getById({eventId:id}));
                };
                self.delete=function(id){
                    IEvent.delete({eventId:id});
                    this.refresh();
                };
                self.refresh=function(){self.evtList =JSON.parse(IEvent.list());}
                self.createNew=function(){
                    IEvent.create({$entity:{description:"test"}})
                    this.refresh();
                };
                self.refresh();
                self.isQuery=false;
                self.sqlQuery=function(e){
                    self.sql = self.sql.toLowerCase();
                    if((e.ctrlKey || e.metaKey) && (e.keyCode == 13 || e.keyCode == 10)){
                        e.preventDefault();
                        if(self.isQuery)
                                return;
                        self.isQuery = true;
                        self.rs = {}
                        $http.post("/sqlQuery", JSON.stringify(self.sql)).then(function (resp) {
                            self.isQuery=false;
                            console.log(resp.data);
                            if(resp.data.length)
                                self.rs = resp.data;
                        },function(){self.isQuery=false;})
                    }
                }
            })
